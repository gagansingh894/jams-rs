name: Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Lint, Test and Build Application
    runs-on: ubuntu-latest

    container:
      image: rust:1.78
      options: --user root
      env:
        LIGHTGBM_LIB_DIR: /usr/local/lib
        LIBTORCH: /usr/local/lib/libtorch
        LIBTORCH_INCLUDE: /usr/local/lib/libtorch
        LIBTORCH_LIB: /usr/local/lib/libtorch
        LD_LIBRARY_PATH: /usr/local/lib/libtorch/lib:/usr/local/lib
        PROTOC: /usr/bin/protoc
        # For integration testing with local stack
        AWS_ACCESS_KEY_ID: test
        AWS_SECRET_ACCESS_KEY: test
        AWS_DEFAULT_REGION: test
        AWS_ENDPOINT_URL: http://localstack:4566

    services:
      localstack:
        image: localstack/localstack:latest
        ports:
          - 4566:4566
        options: >-
          --entrypoint=""
          -e SERVICES=s3
          -e DEBUG=1

    steps:
#      - name: Checkout
#        uses: actions/checkout@v4
#
#      - name: Setup Environment
#        run: bash build/setup_environment_linux_x86_64.sh
#
#      - name: Lint
#        run: make lint
#
#      - name: Install cargo-nextest
#        run: cargo install cargo-nextest

      - name: Upload artefacts to localstack S3
        run: |
          docker exec -i localstack sh -c 'git clone https://github.com/gagansingh894/jams-rs.git'
          docker exec -i localstack sh -c 'aws --endpoint-url=http://localhost:4566 s3 cp jams-rs/jams-core/tests/model_storage/s3_model_store/ s3://jams-model-store --recursive'

#      - name: Run tests
#        run: make test
#
#      - name: Install cargo-llvm-cov
#        uses: taiki-e/install-action@cargo-llvm-cov
#
#      - name: Generate code coverage
#        run: cargo llvm-cov nextest --all-features --workspace --lcov --output-path lcov.info
#
#      - name: Upload coverage to Codecov
#        uses: codecov/codecov-action@v4
#        with:
#          token: ${{ secrets.CODECOV_TOKEN }}
#          files: lcov.info
#          fail_ci_if_error: true
#
#  release:
#    name: Build and Publish Docker Image
#    runs-on: ubuntu-latest
#    needs: build
#    if: github.ref == 'refs/heads/main'
#
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v4
#
#      - name: Log in to Docker Hub
#        uses: docker/login-action@v3
#        with:
#          username: ${{ secrets.DOCKER_USERNAME }}
#          password: ${{ secrets.DOCKER_PASSWORD }}
#
#      - name: Build Docker image
#        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/jams:latest -f build/Dockerfile .
#
#      - name: Push Docker image
#        run: docker push ${{ secrets.DOCKER_USERNAME }}/jams:latest