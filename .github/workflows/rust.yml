name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    container:
      image: rust:1.78
      options: --user root
      env:
        LIGHTGBM_LIB_DIR: /usr/local/lib
        LIBTORCH: /usr/local/lib/libtorch
        LIBTORCH_INCLUDE: /usr/local/lib/libtorch
        LIBTORCH_LIB: /usr/local/lib/libtorch
        LD_LIBRARY_PATH: /usr/local/lib/libtorch/lib:/usr/local/lib

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Environment
        run: bash build/setup_environment.sh

      - name: Lint
        run: make lint

      - name: Run tests
        run: make test

  release:
    name: Release
#    needs: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Install Semantic Release Rust Plugin
        run: npm install semantic-release-rust

      - name: Install Semantic Release Action
        uses: cycjimmy/semantic-release-action@v4

      - name: Configure Semantic Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo '{
            "branches": ["main"],
            "plugins": [
              "@semantic-release/commit-analyzer",
              {
                "path": "semantic-release-rust",
                "cargoCommand": "semantic-release-rust"
              },
              "@semantic-release/release-notes-generator",
              {
                "path": "@semantic-release/changelog",
                "changelogFile": "CHANGELOG.md"
              },
              "@semantic-release/git"
            ]
          }' > .releaserc.json

      - name: Run Semantic Release
        env:
          RUST_BACKTRACE: 1
          RUST_LOG: info
          CARGO_TERM_COLOR: always
        run: |
          npx semantic-release